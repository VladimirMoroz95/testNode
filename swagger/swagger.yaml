swagger: "2.0"
info:
  version: "0.0.1"
  title: blog API
# during dev, should point to your local machine
host: localhost:7070
# basePath prefixes all resource paths 
basePath: /

schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

tags:
  - name: "Authorization"
  - name: "Users"
  - name: "Articles"

paths:
  /auth/login:
    post:
      tags:
      - "Authorization"
      description: Logs user into the system
      operationId: "loginUser"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Login"

  /auth/logout:
    post:
      tags:
        - "Authorization"
      description: Logs out current logged in user session
      operationId: "logoutUser"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Logout"


  /users:
    get:
      tags:
      - "Users"
      summary: Returns users list
      operationId: getUsersList
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/User"

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
      - "Users"
      summary: Add new user
      operationId: addUser
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: User has been add
        400:
          description: User already exists with this login

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /users/{id}:
    delete:
      tags:
      - "Users"
      summary: Delete user
      operationId: DelUser
      parameters:
        - name: "id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          format: "int64"

  /articles:
    get:
      tags:
        - "Articles"
      summary: Returns arcticles list
      operationId: getArticlesList
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Article"

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - "Articles"
      summary: Add new arcticle
      operationId: addArticle
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Article"
      responses:
        200:
          description: Article has been add
        400:
          #todo add different response
          description: Author is not defined

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /articles/{id}:
    delete:
      tags:
        - "Articles"
      summary: Delete article
      operationId: DelArticle
      parameters:
        - name: "id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          format: "int64"
definitions:

  Login:
    type: object
    required:
      - login
      - password
    properties:
      login:
        type: string
      password:
        type: string

  Logout:
    type: object
    required:
      - login
    properties:
      login:
        type: string

  User:
    type: object
    required:
      - id
      - login
      - password
    properties:
      id:
        type: number
      login:
        type: string
      password:
        type: string
      fio:
        type: string

  Arcticle:
    type: object
    required:
      - id
      - author_id
      - title
    properties:
      id:
        type: number
      author_id:
        type: number
      titile:
        type: string
      tags:
        type: array
        items:
          type: string


  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
